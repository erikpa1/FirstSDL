
//====================================================
//  French - Canadian
//====================================================

// Based on French.
// This file redefines phonemes which differ from those in ph_french


phoneme : //  Lengthen previous vowel by "length"
  virtual
  length 70
endphoneme




phoneme E
  vwl starttype #e endtype #e
  length 164
  FMT(vowel/e_mid)
endphoneme


phoneme u
  vwl starttype #u endtype #u
  length 174
  FMT(vowel/u_bck)
endphoneme


phoneme E~
  vwl  starttype #e  endtype #e
  length 192
  FMT(vnasal/ee_n)
endphoneme


phoneme I
  vwl  starttype #i endtype #i
  length 158
  IfNextVowelAppend(;)
  FMT(vowel/ii)
endphoneme

phoneme U
  vwl starttype #u endtype #u
  length 150
  FMT(vowel/uu_bck)
endphoneme


phoneme y"
  vwl starttype #u endtype #u
  length 140
  FMT(vowel/yy)        // was sv_y2
endphoneme

phoneme E:         // [ae] diphthong
  vwl starttype #@ endtype #e
  length 230
  FMT(vdiph/ae)
endphoneme

phoneme A
  vwl  starttype #a  endtype #a
  length 166
  FMT(vowel/aa)
endphoneme





// CONSONANTS
//===========
// uses the consonants in file "phonemes", unless overridden here

phoneme R
  liquid trl
  lengthmod 7
  Vowelin f1=0  f2=1500 -400 400  f3=-400 80
  IF nextPh(isNotVowel) THEN
    ChangePhoneme(r/)
  ENDIF
  FMT(vwl_fr/@R2) addWav(r3/rx, 120)
endphoneme
